<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- 控制台不同级别颜色 -->
    <conversionRule conversionWord="kanoLevelColor" converterClass="com.kano.log.KanoLevelColorConverter"/>

    <springProperty scope="context" name="applicationName" source="spring.application.name"/>
    <springProperty scope="context" name="applicationBasePackage" source="spring.application.base.package"/>
    <springProperty scope="context" name="mapperPackage" source="mybatis.sql.logger.mapper.package"/>
    <springProperty scope="context" name="logDir" source="spring.application.logger.dir.root"/>

    <!-- 匹配规则 -->
    <property name="CONSOLE_PATTERN"
              value="%date{yyyy-MM-dd HH:mm:ss} | %boldMagenta(${applicationName}) - [ ${PID} ] - %kanoLevelColor(%-5level) - | %yellow(%thread) | %green(%logger) [ %white(%L) ] - (%msg%n)"/>
    <property name="FILE_LOG_PATTERN"
              value="%date{yyyy-MM-dd HH:mm:ss} | ${applicationName} - [ ${PID} ] - %-5level - | %thread | %logger | %L - %msg%n"/>

    <springProperty scope="context" name="log.path" source="logging.path"/>

    <!-- 控制台 -->
    <appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
        <encoder charset="UTF-8">
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>



    <appender name="fileInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <File>${logDir}/error/error.${applicationName}.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${logDir}/error/error.${applicationName}.%d{yyyy-MM-dd}.log</FileNamePattern>
            <maxHistory>7</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <immediateFlush>false</immediateFlush>
        </encoder>
    </appender>

    <appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <File>${logDir}/error/error.${applicationName}.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${logDir}/error/error.${applicationName}.%d{yyyy-MM-dd}.log</FileNamePattern>
            <maxHistory>90</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <immediateFlush>false</immediateFlush>
        </encoder>
    </appender>

    <appender name="fileWarnLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <File>${logDir}//warn/warn.${applicationName}.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${logDir}/warn/warn.${applicationName}.%d{yyyy-MM-dd}.log</FileNamePattern>
            <maxHistory>90</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <immediateFlush>false</immediateFlush>
        </encoder>
    </appender>

    <!-- 后续自定义过滤器过滤出错误的sql -->
<!--    <appender name="fileSqlErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter>
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <File>${logDir}/sql/sql.${applicationName}.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${logDir}/sql/sql.${applicationName}.%d{yyyy-MM-dd}.log
            </FileNamePattern>
            <maxHistory>90</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <immediateFlush>false</immediateFlush>
        </encoder>
    </appender>-->

    <appender name ="fileInfoLogAsync" class= "ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref ="fileInfoLog"/>
    </appender>

    <appender name ="fileErrorLogAsync" class= "ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref ="fileErrorLog"/>
    </appender>

    <appender name ="fileWarnLogAsync" class= "ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref ="fileWarnLog"/>
    </appender>

<!--    <appender name ="fileSqlErrorLogAsync" class= "ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref ="fileSqlErrorLog"/>
    </appender>-->



    <root level="DEBUG">
        <appender-ref ref="consoleLog" />
        <appender-ref ref="fileInfoLogAsync" />
        <appender-ref ref="fileErrorLogAsync" />
        <appender-ref ref="fileWarnLogAsync" />
      <!--  <appender-ref ref="fileSqlErrorLogAsync" />-->
    </root>


</configuration>
